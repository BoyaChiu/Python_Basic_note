python深复制浅复制
python中的类型可以分为可变类型和不可变类型。
可变类型有：列表、字典
对于可变类型，我们使用其方法和对其做运算时都是直接修改了这个对象本身。
不可变类型：数字、字符串、元组
对于不可变类型，我们想要得到修改后的对象时必须要有重新赋值的过程。
python中对象之间的赋值是按引用传递的，所以对于可变类型当我们直接使用“=”来复制的时候会发现其实我们并没有实现复制，而只是对这个可变对象多了一个名字。
如果需要复制对象，可以使用标准库中的copy模块，copy.copy是浅复制，只会复制父对象，而不会复制对象内部的子对象；copy.deepcopy是深复制，会复制对象及其子对象。
例如：
 
 
如上图所示，列表a里面的第三元素也是一个列表，我们对这个列表对象进行了几种形式的复制，然后对这个列表的对象进行了修改，修改后再来查看复制的其他的对象的元素的变化，从上图的例子通过id我们可以看到，对于复制后的对象，用“=”这种方式赋值的对象的id是和原对象一样的。所以在对a做修改的时候，b也同样跟着变化，就相当于给a这个对象多了b这个名字。通过切片的方式复制的c对象和通过.copy的方式复制的d对象，第一层列表元素没有跟着a的改变而改变，但是里面列表是跟着a的变化而变化了，这就是浅复制。而唯一没有改变的是通过.deepcopy的方法复制的e对象，不管是外层的列表元素还是里层的列表都没有改变，这个就是深复制
